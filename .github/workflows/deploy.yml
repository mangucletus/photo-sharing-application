name: Deploy Photo Sharing App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-west-1
  TERRAFORM_VERSION: 1.5.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        terraform_wrapper: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies for Lambda
      run: |
        mkdir -p lambda_package
        pip install Pillow boto3 -t lambda_package/
        cp lambda/lambda_function.py lambda_package/
        cd lambda_package && zip -r ../image_resizer.zip .

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Plan
      run: terraform plan -out=tfplan
      working-directory: ./terraform
      env:
        TF_VAR_aws_region: ${{ env.AWS_REGION }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply tfplan
      working-directory: ./terraform

    - name: Get Terraform Outputs
      if: github.ref == 'refs/heads/main'
      id: terraform
      run: |
        echo "images_bucket=$(terraform output -raw images_bucket_name)" >> $GITHUB_OUTPUT
        echo "frontend_bucket=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT
        echo "thumbnails_bucket=$(terraform output -raw thumbnails_bucket_name)" >> $GITHUB_OUTPUT
        echo "user_pool_id=$(terraform output -raw cognito_user_pool_id)" >> $GITHUB_OUTPUT
        echo "user_pool_client_id=$(terraform output -raw cognito_client_id)" >> $GITHUB_OUTPUT
        echo "api_gateway_url=$(terraform output -raw api_gateway_url)" >> $GITHUB_OUTPUT
      working-directory: ./terraform

    - name: Install Frontend Dependencies
      run: npm ci
      working-directory: ./frontend

    - name: Build React App
      if: github.ref == 'refs/heads/main'
      run: npm run build
      working-directory: ./frontend
      env:
        REACT_APP_AWS_REGION: ${{ env.AWS_REGION }}
        REACT_APP_USER_POOL_ID: ${{ steps.terraform.outputs.user_pool_id }}
        REACT_APP_USER_POOL_CLIENT_ID: ${{ steps.terraform.outputs.user_pool_client_id }}
        REACT_APP_IMAGES_BUCKET: ${{ steps.terraform.outputs.images_bucket }}
        REACT_APP_THUMBNAILS_BUCKET: ${{ steps.terraform.outputs.thumbnails_bucket }}
        REACT_APP_API_GATEWAY_URL: ${{ steps.terraform.outputs.api_gateway_url }}

    - name: Deploy Frontend to S3
      if: github.ref == 'refs/heads/main'
      run: |
        aws s3 sync frontend/build/ s3://${{ steps.terraform.outputs.frontend_bucket }}/ --delete
        aws s3 cp frontend/build/index.html s3://${{ steps.terraform.outputs.frontend_bucket }}/index.html --cache-control="no-cache"

    - name: Update Lambda Function
      if: github.ref == 'refs/heads/main'
      run: |
        aws lambda update-function-code \
          --function-name photo-sharing-app-image-resizer \
          --zip-file fileb://image_resizer.zip \
          --region ${{ env.AWS_REGION }}

    - name: Output Deployment URLs
      if: github.ref == 'refs/heads/main'
      run: |
        echo "ðŸš€ Deployment Complete!"
        echo "Frontend URL: http://${{ steps.terraform.outputs.frontend_bucket }}.s3-website-${{ env.AWS_REGION }}.amazonaws.com"
        echo "API Gateway URL: ${{ steps.terraform.outputs.api_gateway_url }}"
        echo "Images Bucket: ${{ steps.terraform.outputs.images_bucket }}"
        echo "Thumbnails Bucket: ${{ steps.terraform.outputs.thumbnails_bucket }}"
#!/bin/bash

# Photo Sharing App Setup Script
# This script helps set up the environment after deploying with Terraform

set -e

echo "🚀 Photo Sharing App Setup"
echo "=========================="

# Check if we're in the right directory
if [ ! -f "terraform/main.tf" ]; then
    echo "❌ Error: Please run this script from the project root directory"
    exit 1
fi

# Check if Terraform is installed
if ! command -v terraform &> /dev/null; then
    echo "❌ Error: Terraform is not installed"
    echo "Please install Terraform: https://learn.hashicorp.com/tutorials/terraform/install-cli"
    exit 1
fi

# Check if AWS CLI is installed
if ! command -v aws &> /dev/null; then
    echo "❌ Error: AWS CLI is not installed"
    echo "Please install AWS CLI: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html"
    exit 1
fi

echo "📋 Step 1: Checking AWS credentials..."
if ! aws sts get-caller-identity &> /dev/null; then
    echo "❌ Error: AWS credentials not configured"
    echo "Please run: aws configure"
    exit 1
fi
echo "✅ AWS credentials configured"

echo "📋 Step 2: Creating Lambda deployment package..."
if [ ! -d "lambda_package" ]; then
    mkdir lambda_package
fi

echo "Installing Python dependencies..."
pip install -r lambda/requirements.txt -t lambda_package/ --quiet

echo "Copying Lambda function..."
cp lambda/lambda_function.py lambda_package/

echo "Creating deployment package..."
cd lambda_package && zip -r ../image_resizer.zip . > /dev/null
cd ..
echo "✅ Lambda package created: image_resizer.zip"

echo "📋 Step 3: Deploying infrastructure with Terraform..."
cd terraform

echo "Initializing Terraform..."
terraform init

echo "Planning infrastructure deployment..."
terraform plan -out=tfplan

echo "Applying Terraform configuration..."
terraform apply tfplan

echo "✅ Infrastructure deployed successfully!"

echo "📋 Step 4: Getting Terraform outputs..."
IMAGES_BUCKET=$(terraform output -raw images_bucket_name)
THUMBNAILS_BUCKET=$(terraform output -raw thumbnails_bucket_name)
FRONTEND_BUCKET=$(terraform output -raw frontend_bucket_name)
USER_POOL_ID=$(terraform output -raw cognito_user_pool_id)
USER_POOL_CLIENT_ID=$(terraform output -raw cognito_client_id)
API_GATEWAY_URL=$(terraform output -raw api_gateway_url)
FRONTEND_URL="http://${FRONTEND_BUCKET}.s3-website-us-east-1.amazonaws.com"

cd ..

echo "📋 Step 5: Creating environment file for React app..."
cat > frontend/.env.local << EOF
# Auto-generated by setup script
REACT_APP_AWS_REGION=us-east-1
REACT_APP_USER_POOL_ID=${USER_POOL_ID}
REACT_APP_USER_POOL_CLIENT_ID=${USER_POOL_CLIENT_ID}
REACT_APP_IMAGES_BUCKET=${IMAGES_BUCKET}
REACT_APP_THUMBNAILS_BUCKET=${THUMBNAILS_BUCKET}
REACT_APP_API_GATEWAY_URL=${API_GATEWAY_URL}
EOF

echo "✅ Environment file created: frontend/.env.local"

echo "📋 Step 6: Installing frontend dependencies..."
cd frontend
npm install --silent
echo "✅ Frontend dependencies installed"

echo "📋 Step 7: Building React app..."
npm run build > /dev/null
echo "✅ React app built successfully"

echo "📋 Step 8: Deploying frontend to S3..."
aws s3 sync build/ s3://${FRONTEND_BUCKET}/ --delete --quiet
aws s3 cp build/index.html s3://${FRONTEND_BUCKET}/index.html --cache-control="no-cache" --quiet
echo "✅ Frontend deployed to S3"

cd ..

echo ""
echo "🎉 Setup Complete!"
echo "=================="
echo ""
echo "📱 Frontend URL: ${FRONTEND_URL}"
echo "🔗 API Gateway: ${API_GATEWAY_URL}"
echo "📦 Images Bucket: ${IMAGES_BUCKET}"
echo "🖼️  Thumbnails Bucket: ${THUMBNAILS_BUCKET}"
echo ""
echo "📝 Next Steps:"
echo "1. Visit the frontend URL to access your app"
echo "2. Create a user account to start uploading photos"
echo "3. For local development, run 'npm start' in the frontend directory"
echo ""
echo "🔍 Monitoring:"
echo "- Lambda logs: AWS CloudWatch"
echo "- S3 activity: AWS CloudTrail"
echo "- User activity: Cognito console"
echo ""
echo "Happy photo sharing! 📸"